<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="ChangeRequest.Code.ChangeRequestMacros" locale="">
  <web>ChangeRequest.Code</web>
  <name>ChangeRequestMacros</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <originalMetadataAuthor>xwiki:XWiki.Admin</originalMetadataAuthor>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>ChangeRequestMacros</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
## FIXME: This needs to be removed once we bump parent to next version
## Was added to workaround https://jira.xwiki.org/browse/XWIKI-19508
#macro (wrappedDisplayUser $user $options)
  #if ($stringtool.isEmpty($user))
    #set ($realUser = "XWiki.XWikiGuest")
  #else
    #set ($realUser = $user)
  #end
  #displayUser($realUser $options)
#end
#macro (displayReplyToHeader $replyReference)
  #set ($originalMessage = $services.discussions.getMessage($replyReference))
  #if ($originalMessage)
    #set ($originalMessageReference = $escapetool.xml($services.discussions.serialize($replyReference)))
    &lt;div class="reply-to-header" data-original-reference="$originalMessageReference"&gt;
        $services.localization.render('changerequest.sheet.message.reply.header', ["#wrappedDisplayUser($originalMessage.actorReference.reference, {'useInlineHTML': true})", "$escapetool.xml($services.date.displayTimeAgo($originalMessage.updateDate))"])
      &lt;a class="reply-to-navigation" href="#$originalMessageReference" title="$services.localization.render('changerequest.sheet.message.reply.link.title')"&gt;
        $services.icon.renderHTML('up')
      &lt;/a&gt;
    &lt;/div&gt;
  #end
#end
#macro (displayMessage $message $changeRequest)
#set ($messageReference = $escapetool.xml($services.discussions.serialize($message.reference)))
&lt;div class="message" data-reference="$messageReference" id="$messageReference"&gt;
  &lt;div class="message-metadata"&gt;
    &lt;span class="message-author"&gt;#wrappedDisplayUser($message.actorReference.reference, {'useInlineHTML': true})&lt;/span&gt;
    &lt;span class="message-creationDate" title="$escapetool.xml($message.updateDate)"&gt;$escapetool.xml($services.date.displayTimeAgo($message.updateDate))&lt;/span&gt;
    &lt;span class="message-badges"&gt;
      #if ($services.changerequest.authorization.isAuthorizedToComment($changeRequest))
      &lt;span class="reply"&gt;
        &lt;button class="btn badge reply-button" type="button" title="$escapetool.xml($services.localization.render('changerequest.sheet.message.reply.button.title'))"&gt;
          $services.icon.renderHTML('comments') $services.localization.render('changerequest.sheet.message.reply.button')
        &lt;/button&gt;
      &lt;/span&gt;
      #end
      &lt;span class="outdated-message hidden"&gt;
        &lt;span class="label label-danger" title="$escapetool.xml($services.localization.render('changerequest.sheet.message.outdated.title'))"&gt;
          $services.icon.renderHTML('clock') $services.localization.render('changerequest.sheet.message.outdated')
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span class="collapse-buttons"&gt;
        #set ($messageId = "message_$stringtool.replaceChars($messageReference, ';=', '_')")
        &lt;button class="btn badge collapse-button" type="button" data-toggle="collapse" data-target="#$messageId" aria-expanded="false" aria-controls="$messageId" title="$escapetool.xml($services.localization.render('changerequest.sheet.message.collapse.button.title'))"&gt;
          $services.icon.renderHTML('caret-up')
        &lt;/button&gt;
        &lt;button class="btn badge expand-button hidden" type="button" data-toggle="collapse" data-target="#$messageId" aria-expanded="false" aria-controls="$messageId" title="$escapetool.xml($services.localization.render('changerequest.sheet.message.expand.button.title'))"&gt;
          $services.icon.renderHTML('caret-down')
        &lt;/button&gt;
      &lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
  #if ($message.replyTo)
    #displayReplyToHeader($message.replyTo)
  #end
  &lt;div class="message-content collapse in" id="$messageId"&gt;
    $services.discussions.renderMessageContent($messageReference)
  &lt;/div&gt;
&lt;/div&gt;
#end
#macro (getDiscussionDataAttributes $discussion $dataAttributes)
  #set ($reference = $services.changerequest.discussion.getReference($discussion))
  #set ($supplementaryData = '')
  #if ($reference.type == 'LINE_DIFF')
    #set ($lineDiffLocation = $reference.lineDiffLocation)
    #set ($fileDiffLocation = $lineDiffLocation.fileDiffLocation)
    
    #define ($supplementaryData)
      data-targetReference="$escapetool.xml($fileDiffLocation.targetReference)" data-diffId="$escapetool.xml($fileDiffLocation.diffId)" data-documentPart="$escapetool.xml($lineDiffLocation.documentPart)" data-entityReference="$escapetool.xml($lineDiffLocation.entityReference)" data-diffBlockId="$escapetool.xml($lineDiffLocation.diffBlockId)" data-lineChange="$escapetool.xml($lineDiffLocation.lineChange)" data-lineNumber="$escapetool.xml($lineDiffLocation.lineNumber)"
    #end
  #end
  #define ($dataAttributes)
    data-type="$escapetool.xml($reference.type)" data-reference="$escapetool.xml($reference.reference)" $supplementaryData
  #end
#end
#macro (displayEventStatus $status)
  #set ($lowerCaseStatus = $stringtool.lowerCase($status))
  #set ($translation = $services.localization.render("ChangeRequest.Code.ChangeRequestClass_status_$lowerCaseStatus"))
  $stringtool.lowerCase($translation)
#end
#macro (displayEvent $event)
  ## we skip the document modified events, since they are basically redundant with the filechanges ones.
  #if ($event.type != "changerequest.document.modified")
  &lt;li class="event"&gt;
    &lt;span class="date" data-date="$event.date.time"&gt;$datetool.format($event.date)&lt;/span&gt;
    &lt;span class="content"&gt;
    #set ($userArgument = "#wrappedDisplayUser($event.user)")
    #set ($localizationKey = "changerequest.timeline.$event.type")
    #set ($localizationArguments = [])
    #if ($event.type == "changerequest.create")
      #set ($actualDoc = $xwiki.getDocument($event.document))
      #set ($localizationArguments = [$userArgument, $xwiki.getURL($event.document), $actualDoc.displayTitle])
    #elseif ($event.type == "changerequest.filechange.added")
      #set ($fileChangeId = $event.parameters.get('changerequest.filechange.id'))
      #set ($fileChangeOpt = $services.changerequest.getFileChange($changeRequest, $fileChangeId))
      #if ($fileChangeOpt.isPresent())
        #set ($eventDoc = $fileChangeOpt.get().targetEntity)
        #set ($actualDoc = $xwiki.getDocument($eventDoc))
        #set ($localizationArguments = [$userArgument, $xwiki.getURL($eventDoc), $actualDoc.displayTitle])
      #end
    #elseif ($event.type == "changerequest.status.modified")
      #set ($oldStatus = $event.parameters.get('changerequest.status.old'))
      #set ($newStatus = $event.parameters.get('changerequest.status.new'))
      #set ($localizationArguments = [$userArgument, "#displayEventStatus($oldStatus)", "#displayEventStatus($newStatus)"])
    #elseif ($event.type == "changerequest.review.added")
      #set ($reviewId = $event.parameters.get('changerequest.review.id'))
      #set ($reviewOpt = $services.changerequest.review.getReview($changeRequest, $reviewId))
      #if ($reviewOpt.isPresent())
        #if ($reviewOpt.get().approved)
          #set ($localizationKey = "${localizationKey}.approval")
        #else
          #set ($localizationKey = "${localizationKey}.requestchanges")
        #end
        #set ($localizationArguments = [$userArgument])
      #end
    #elseif ($event.type == "changerequest.rebased")
      #set ($concernsAllCR = $event.parameters.get('changerequest.rebased.all'))
      #set ($isAboutConflictFixing = $event.parameters.get('changerequest.rebased.conflictRelated'))
      #set ($fileChangeId = $event.parameters.get('changerequest.rebased.filechange.id'))
      
      #if ($concernsAllCR == 'true')
        #set ($localizationArguments = [$userArgument])
        #set ($localizationKey = "${localizationKey}.all")
      #else
        #set ($fileChangeOpt = $services.changerequest.getFileChange($changeRequest, $fileChangeId))
        #if ($fileChangeOpt.isPresent())
          #set ($eventDoc = $fileChangeOpt.get().targetEntity)
          #set ($actualDoc = $xwiki.getDocument($eventDoc))
          #set ($localizationArguments = [$userArgument, $xwiki.getURL($eventDoc), $actualDoc.displayTitle])
        #end
        #if ($isAboutConflictFixing == 'true')
          #set ($localizationKey = "${localizationKey}.conflictFixing")
        #else
          #set ($localizationKey = "${localizationKey}.filechange")
        #end
      #end
    #else
      #set ($localizationArguments = [$userArgument])
    #end
    $services.localization.render($localizationKey, $localizationArguments)
    &lt;/span&gt;
  &lt;/li&gt;
  #end
#end
#macro (displayDescription)
  ## Code inspired from AWM.Content page
  #if ("$!request.edit" == 'description' &amp;&amp; $canBeEdited)
    #set ($name = 'content')
    #set ($editedDocument = $doc)
    ## Use the preferred content editor.
    #set ($useWysiwygEditor = $xwiki.getUserPreference('editor') == 'Wysiwyg')
    #set ($saveDescriptionUrl = $services.changerequest.getChangeRequestURL('save', $changeRequestId))
    #set ($saveDescriptionUrl = "${saveDescriptionUrl}?form_token=$services.csrf.token")
    &lt;form method="post" action="$saveDescriptionUrl"&gt;
    ## The "content" id is expected by some JavaScript and CSS code.
    #set ($id = 'content')
    #if (!$useWysiwygEditor)
      &lt;div id="xwikieditcontentinner"&gt;
        ## The tool bar may have an entry to insert an HTML macro. Make sure it doesn't break the HTML macro we are currently in.
        #set ($toolBar = "#template('simpleedittoolbar.vm')")
        $!toolBar.replace('{{', '&amp;#123;&amp;#123;')
        ## Display a simple textarea.
        &lt;textarea id="$id" cols="80" rows="25" name="$name"&gt;$escapetool.xml($editedDocument.content)&lt;/textarea&gt;
      &lt;/div&gt;
    #else
      $!services.edit.syntaxContent.wysiwyg($editedDocument.content, $editedDocument.syntax, {
        'id': "$id",
        'name': "$name",
        'rows': 25,
        'cols': 80,
        'full': true
      })
    #end
    &lt;div class="description-button-wrapper"&gt;
      &lt;input type="button" id="cancel-description" class="btn btn-default" value="Cancel" /&gt;
      &lt;input type="submit" id="save-description" class="btn btn-primary" value="Save" /&gt;
    &lt;/div&gt;
    &lt;/form&gt;
  #elseif ($canBeEdited)
    &lt;a class="edit-description" role="button" title="Edit" href="$doc.getURL('view', 'edit=description')"&gt;
      $services.icon.renderHTML('pencil')
      &lt;span class="sr-only"&gt;Edit&lt;/span&gt;
    &lt;/a&gt;
    #if ("$!doc.content" == "")
      &lt;span class="description-placeholder"&gt;$services.localization.render('changerequest.sheet.description.placeholder')&lt;/span&gt;
    #else
    ## Include the content of the current document.
    ## Escape {{ in the rendered content to be sure that the HTML macro is not closed unintentionally.
      &lt;span class="description-content"&gt;$doc.getRenderedContent($doc.content, $doc.syntax.toIdString()).replace('{{', '&amp;amp;#123;&amp;amp;#123;')&lt;/span&gt;
    #end
  #else
    &lt;span class="description-content"&gt;$doc.getRenderedContent($doc.content, $doc.syntax.toIdString()).replace('{{', '&amp;amp;#123;&amp;amp;#123;')&lt;/span&gt;
  #end
#end
{{/velocity}}</content>
</xwikidoc>
